const { findBirthdayPeople, calculateAge } = require("../utils/birthdayUtils");

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è
 */
class BirthdayService {
  constructor(bot) {
    this.bot = bot;
    this.initialized = false;

    // –ú–∞—Å—Å–∏–≤ —à–∞–±–ª–æ–Ω–æ–≤ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π
    this.birthdayMessages = [
      "üéâ –° –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è, {name}! –ñ–µ–ª–∞–µ–º —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö —É—Å–ø–µ—Ö–æ–≤ –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è! üé≠",
      "üéÇ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è, {name}! –ü—É—Å—Ç—å –∫–∞–∂–¥–æ–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –∞–ø–ª–æ–¥–∏—Å–º–µ–Ω—Ç–∞–º–∏! üëè",
      "ü•≥ –° –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è, {name}! –ñ–µ–ª–∞–µ–º –Ω–æ–≤—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Ä–æ–ª–µ–π –∏ –≥—Ä–æ–º–∫–∏—Ö –æ–≤–∞—Ü–∏–π! üé¨",
      "üéä {name}, –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Ç–µ–±—è —Å –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è! –¢–≤–æ–π —Ç–∞–ª–∞–Ω—Ç –¥–æ—Å—Ç–æ–∏–Ω —Å–∞–º—ã—Ö –±–æ–ª—å—à–∏—Ö —Å—Ü–µ–Ω! üé™",
      "üéà –° –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è, {name}! –ü—É—Å—Ç—å —Ç–≤–æ–∏ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ –∑–∞–º—ã—Å–ª—ã –≤—Å–µ–≥–¥–∞ –≤–æ–ø–ª–æ—â–∞—é—Ç—Å—è –≤ –∂–∏–∑–Ω—å! ‚ú®",
    ];
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–µ—Ä–≤–∏—Å
   */
  init() {
    if (this.initialized) return;

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –≤ 10:00 —É—Ç—Ä–∞
    this.scheduleCheck();
    this.initialized = true;

    console.log("Birthday service initialized");
  }

  /**
   * –ü–ª–∞–Ω–∏—Ä—É–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è
   */
  scheduleCheck() {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
    const now = new Date();

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ 10:00 —É—Ç—Ä–∞
    let nextCheck = new Date(
      now.getFullYear(),
      now.getMonth(),
      now.getDate(),
      10,
      0,
      0
    );

    // –ï—Å–ª–∏ —Å–µ–π—á–∞—Å —É–∂–µ –ø–æ—Å–ª–µ 10 —É—Ç—Ä–∞, –ø–µ—Ä–µ–Ω–æ—Å–∏–º –Ω–∞ –∑–∞–≤—Ç—Ä–∞
    if (now > nextCheck) {
      nextCheck.setDate(nextCheck.getDate() + 1);
    }

    // –í—ã—á–∏—Å–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    const delay = nextCheck.getTime() - now.getTime();

    // –ü–ª–∞–Ω–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
    setTimeout(() => {
      this.checkBirthdays();

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞
      setInterval(() => this.checkBirthdays(), 24 * 60 * 60 * 1000);
    }, delay);

    console.log(
      `Next birthday check scheduled at ${nextCheck.toLocaleString()}`
    );
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è
   */
  async checkBirthdays() {
    console.log("–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è...");

    try {
      const birthdayPeople = await findBirthdayPeople();

      if (birthdayPeople.length === 0) {
        console.log("–°–µ–≥–æ–¥–Ω—è –Ω–µ—Ç –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–æ–≤");
        return;
      }

      console.log(`–ù–∞–π–¥–µ–Ω–æ ${birthdayPeople.length} –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–æ–≤`);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥–æ–º—É –∏–º–µ–Ω–∏–Ω–Ω–∏–∫—É
      for (const person of birthdayPeople) {
        await this.sendBirthdayWish(person);
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
      await this.sendGroupNotification(birthdayPeople);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è:", error);
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
   * @param {Object} user - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å-–∏–º–µ–Ω–∏–Ω–Ω–∏–∫
   */
  async sendBirthdayWish(user) {
    console.log(user);

    if (!user.telegram_id) {
      console.log(`Cannot send birthday wish to ${user.name}: no Telegram ID`);
      return;
    }

    try {
      // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ
      const messageTemplate =
        this.birthdayMessages[
          Math.floor(Math.random() * this.birthdayMessages.length)
        ];

      // –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –∏–º—è –≤ —à–∞–±–ª–æ–Ω
      const message = messageTemplate.replace("{name}", user.name);

      // –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
      const age = calculateAge(user.birthDate);
      const ageMessage = age
        ? `\n\n–¢–µ–±–µ —Å–µ–≥–æ–¥–Ω—è –∏—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è ${age} ${this.getYearWord(age)}! üéÇ`
        : "";

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–∏—á–Ω–æ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ
      await this.bot.telegram.sendMessage(
        user.telegram_id,
        message + ageMessage,
        { parse_mode: "HTML" }
      );

      console.log(`Sent birthday wish to ${user.name} (${user.telegramId})`);
    } catch (error) {
      console.error(`Failed to send birthday wish to ${user.name}:`, error);
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–Ω—è—Ö —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç
   * @param {Array} birthdayPeople - –°–ø–∏—Å–æ–∫ –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–æ–≤
   */
  async sendGroupNotification(birthdayPeople) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∫–∞–∑–∞–Ω –ª–∏ GROUP_CHAT_ID
      if (!process.env.GROUP_CHAT_ID) {
        console.log(
          "GROUP_CHAT_ID –Ω–µ —É–∫–∞–∑–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≥—Ä—É–ø–ø–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
        );
        return;
      }

      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∏–º–µ–Ω –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–æ–≤
      const names = birthdayPeople.map((p) => p.name).join(", ");

      // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã
      let message = `üéâ <b>–°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –ø—Ä–∞–∑–¥–Ω—É—é—Ç:</b> ${names}! üéÇ\n\n`;
      message += "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å! üéä";

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
      await this.bot.telegram.sendMessage(process.env.GROUP_CHAT_ID, message, {
        parse_mode: "HTML",
      });

      console.log("–ì—Ä—É–ø–ø–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:", error);
    }
  }

  /**
   * –°–∫–ª–æ–Ω—è–µ—Ç —Å–ª–æ–≤–æ "–≥–æ–¥" –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —á–∏—Å–ª–∞
   * @param {number} age - –í–æ–∑—Ä–∞—Å—Ç
   * @returns {string} - –ü—Ä–∞–≤–∏–ª—å–Ω–æ —Å–∫–ª–æ–Ω–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
   */
  getYearWord(age) {
    const lastDigit = age % 10;
    const lastTwoDigits = age % 100;

    if (lastTwoDigits >= 11 && lastTwoDigits <= 19) {
      return "–ª–µ—Ç";
    }

    if (lastDigit === 1) {
      return "–≥–æ–¥";
    }

    if (lastDigit >= 2 && lastDigit <= 4) {
      return "–≥–æ–¥–∞";
    }

    return "–ª–µ—Ç";
  }

  /**
   * –†—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
   */
  async manualCheck() {
    console.log("Manual birthday check initiated");
    await this.checkBirthdays();
  }
}

module.exports = BirthdayService;
